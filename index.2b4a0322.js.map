{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js"],"sourcesContent":["(function () {\n'use strict';\nvar $3d28d7f1aac198f5$exports = {};\n/* eslint-disable no-console */ /* eslint-disable function-paren-newline */ function $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n'use strict';\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        // eslint-disable-next-line no-console\n        this.state = 'idle';\n        this.score = 0;\n        this.initialState = initialState;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.state !== 'idle') {\n                    var moveAllNonZeroToTheLeft = this.initialState.map(function(row) {\n                        return $3d28d7f1aac198f5$var$mergeToTheLeft(row);\n                    });\n                    this.state = $3d28d7f1aac198f5$var$loseWinState(moveAllNonZeroToTheLeft);\n                    this.score += $3d28d7f1aac198f5$var$calculateScore(this.initialState, moveAllNonZeroToTheLeft);\n                    var newCellAdded = $3d28d7f1aac198f5$var$addNewCellRandomCell(moveAllNonZeroToTheLeft, 1);\n                    this.initialState = newCellAdded;\n                    return this.initialState;\n                }\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.state !== 'idle') {\n                    var moveAllNonZeroToTheRight = this.initialState.map(function(row) {\n                        return $3d28d7f1aac198f5$var$mergeToTheRight(row);\n                    });\n                    this.state = $3d28d7f1aac198f5$var$loseWinState(moveAllNonZeroToTheRight);\n                    this.score += $3d28d7f1aac198f5$var$calculateScore(this.initialState, moveAllNonZeroToTheRight);\n                    var newCellAdded = $3d28d7f1aac198f5$var$addNewCellRandomCell(moveAllNonZeroToTheRight, 1);\n                    this.initialState = newCellAdded;\n                    return this.initialState;\n                }\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                if (this.state !== 'idle') {\n                    var moveAllNonZeroToTheUp = $3d28d7f1aac198f5$var$mergeUp(this.initialState);\n                    this.state = $3d28d7f1aac198f5$var$loseWinState(moveAllNonZeroToTheUp);\n                    this.score += $3d28d7f1aac198f5$var$calculateScore(this.initialState, moveAllNonZeroToTheUp);\n                    var newCellAdded = $3d28d7f1aac198f5$var$addNewCellRandomCell(moveAllNonZeroToTheUp, 1);\n                    this.initialState = newCellAdded;\n                    return this.initialState;\n                }\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                if (this.state !== 'idle') {\n                    var moveAllNonZeroToTheDown = $3d28d7f1aac198f5$var$mergeDown(this.initialState);\n                    this.score += $3d28d7f1aac198f5$var$calculateScore(this.initialState, moveAllNonZeroToTheDown);\n                    this.state = $3d28d7f1aac198f5$var$loseWinState(moveAllNonZeroToTheDown);\n                    var newCellAdded = $3d28d7f1aac198f5$var$addNewCellRandomCell(moveAllNonZeroToTheDown, 1);\n                    this.initialState = newCellAdded;\n                    return this.initialState;\n                }\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.initialState;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                var allInitialDateIsZero = this.initialState.flat().every(function(value) {\n                    return value === 0;\n                });\n                var returnToInitialArray = allInitialDateIsZero ? $3d28d7f1aac198f5$var$addNewCellRandomCell(this.initialState, 2) : $3d28d7f1aac198f5$var$addNewCellRandomCell(this.initialState, 1);\n                this.initialState = returnToInitialArray;\n                this.score = 0;\n                this.state = 'playing';\n                return this.initialState;\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.initialState = [\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ],\n                    [\n                        0,\n                        0,\n                        0,\n                        0\n                    ]\n                ];\n                this.score = 0;\n                this.state = 'idle';\n                return this.initialState;\n            }\n        }\n    ]);\n    return Game;\n}();\nfunction $3d28d7f1aac198f5$var$addNewCellRandomCell(initialState, qntOfRandomCellsToAdd) {\n    var flatGameInARow = initialState.flat();\n    var availableIndices = flatGameInARow.map(function(value, i) {\n        return value === 0 ? i : null;\n    }).filter(function(value) {\n        return value !== null;\n    });\n    if (availableIndices.length === 0) return initialState;\n    for(var i = 0; i < qntOfRandomCellsToAdd; i++){\n        if (availableIndices.length === 0) break;\n        var randomIndex = Math.floor(Math.random() * availableIndices.length);\n        var indexToAdd = availableIndices.splice(randomIndex, 1)[0];\n        var randomValue = Math.random() < 0.9 ? 2 : 4;\n        flatGameInARow[indexToAdd] = randomValue;\n    }\n    var returnToInitialArray = [];\n    while(flatGameInARow.length)returnToInitialArray.push(flatGameInARow.splice(0, 4));\n    return returnToInitialArray;\n}\nfunction $3d28d7f1aac198f5$var$mergeToTheLeft(result) {\n    for(var i = 0; i < result.length - 1; i++)if (result[i] === result[i + 1] && result[i] !== 0) {\n        result[i] *= 2;\n        result[i + 1] = 0;\n    }\n    var filtered = result.filter(function(num) {\n        return num !== 0;\n    });\n    while(filtered.length < result.length)filtered.push(0);\n    return filtered;\n}\nfunction $3d28d7f1aac198f5$var$mergeToTheRight(result) {\n    var nonZeroValues = result.filter(function(value) {\n        return value !== 0;\n    });\n    for(var i = nonZeroValues.length - 1; i > 0; i--)if (nonZeroValues[i] === nonZeroValues[i - 1]) {\n        nonZeroValues[i] *= 2;\n        nonZeroValues[i - 1] = 0;\n    }\n    // Remove zeros again after merging\n    nonZeroValues = nonZeroValues.filter(function(value) {\n        return value !== 0;\n    });\n    // Add zeros to the left to maintain the row length\n    while(nonZeroValues.length < result.length)nonZeroValues.unshift(0);\n    return nonZeroValues;\n}\nfunction $3d28d7f1aac198f5$var$mergeDown(initialState) {\n    var _loop = function(col) {\n        var column = result.map(function(row) {\n            return row[col];\n        });\n        for(var i = column.length - 1; i > 0; i--)if (column[i] === column[i - 1] && column[i] !== 0) {\n            column[i] *= 2;\n            column[i - 1] = 0;\n        }\n        var filtered = column.filter(function(num) {\n            return num !== 0;\n        });\n        while(filtered.length < column.length)filtered.unshift(0);\n        for(var i1 = 0; i1 < result.length; i1++)result[i1][col] = filtered[i1];\n    };\n    var result = initialState.map(function(col) {\n        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(col);\n    });\n    for(var col = 0; col < result[0].length; col++)_loop(col);\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$mergeUp(initialState) {\n    var _loop = function(col) {\n        var column = result.map(function(row) {\n            return row[col];\n        });\n        for(var i = 0; i < column.length - 1; i++)if (column[i] === column[i + 1] && column[i] !== 0) {\n            column[i] *= 2;\n            column[i + 1] = 0;\n        }\n        var filtered = column.filter(function(num) {\n            return num !== 0;\n        });\n        while(filtered.length < column.length)filtered.push(0);\n        for(var i1 = 0; i1 < result.length; i1++)result[i1][col] = filtered[i1];\n    };\n    var result = initialState.map(function(col) {\n        return (0, $227c6742e0ff6f82$export$71511d61b312f219)(col);\n    });\n    for(var col = 0; col < result[0].length; col++)_loop(col);\n    return result;\n}\nfunction $3d28d7f1aac198f5$var$checkIfWin(initialState) {\n    for(var i = 0; i < initialState.length; i++)for(var j = 0; j < initialState[i].length; j++){\n        if (initialState[i][j] === 2048) return true;\n    }\n    return false;\n}\nfunction $3d28d7f1aac198f5$var$checkIfLose(initialState) {\n    for(var i = 0; i < initialState.length; i++)for(var j = 0; j < initialState[i].length; j++){\n        if (initialState[i][j] === 0) return false;\n    }\n    return true;\n}\nfunction $3d28d7f1aac198f5$var$loseWinState(initialState) {\n    var lose = $3d28d7f1aac198f5$var$checkIfLose(initialState);\n    var win = $3d28d7f1aac198f5$var$checkIfWin(initialState);\n    if (lose) return 'lose';\n    if (win) return 'win';\n    return 'playing';\n}\nfunction $3d28d7f1aac198f5$var$calculateScore(initialState, finalState) {\n    var score = 0;\n    for(var i = 0; i < initialState.length; i++){\n        for(var j = 0; j < initialState[i].length; j++)if (finalState[i][j] > initialState[i][j]) score += finalState[i][j];\n    }\n    return score;\n}\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameScore = document.querySelector('.game-score');\nvar $197cd56b15c33885$var$startButton = document.querySelector('.start');\nvar $197cd56b15c33885$var$messageWin = document.querySelector('.message-win');\nvar $197cd56b15c33885$var$messageLose = document.querySelector('.message-lose');\nvar $197cd56b15c33885$var$messageStart = document.querySelector('.message-start');\nvar $197cd56b15c33885$var$fields = document.querySelectorAll('.field-cell');\ndocument.addEventListener('keydown', $197cd56b15c33885$var$keypressHandler);\n$197cd56b15c33885$var$startButton.addEventListener('click', $197cd56b15c33885$var$startGame);\nfunction $197cd56b15c33885$var$keypressHandler(e) {\n    if (e.key === 'Escape') $197cd56b15c33885$var$restartGame();\n    if (e.key === 'Enter') $197cd56b15c33885$var$startGame();\n    if ($197cd56b15c33885$var$game.getStatus() === 'playing') {\n        if (e.key === 'ArrowUp') $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.moveUp());\n        if (e.key === 'ArrowDown') $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.moveDown());\n        if (e.key === 'ArrowLeft') $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.moveLeft());\n        if (e.key === 'ArrowRight') $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.moveRight());\n    } else if ($197cd56b15c33885$var$game.getStatus() === 'win') {\n        $197cd56b15c33885$var$messageWin.classList.remove('hidden');\n        $197cd56b15c33885$var$startButton.classList.add('start');\n        $197cd56b15c33885$var$startButton.classList.remove('restart');\n        $197cd56b15c33885$var$startButton.textContent = 'Start';\n    } else if ($197cd56b15c33885$var$game.getStatus() === 'lose') {\n        $197cd56b15c33885$var$messageLose.classList.remove('hidden');\n        $197cd56b15c33885$var$startButton.classList.add('start');\n        $197cd56b15c33885$var$startButton.classList.remove('restart');\n        $197cd56b15c33885$var$startButton.textContent = 'Start';\n    }\n}\nfunction $197cd56b15c33885$var$updateBoard(initialState) {\n    var gameValues = initialState.flat();\n    $197cd56b15c33885$var$fields.forEach(function(field, index) {\n        field.textContent = gameValues[index] || '';\n    });\n    var score = $197cd56b15c33885$var$game.getScore();\n    $197cd56b15c33885$var$gameScore.textContent = score;\n    var statuss = $197cd56b15c33885$var$game.getStatus();\n    if (statuss === 'win') $197cd56b15c33885$var$messageWin.classList.remove('hidden');\n    else if (statuss === 'lose') $197cd56b15c33885$var$messageLose.classList.remove('hidden');\n}\nfunction $197cd56b15c33885$var$restartGame() {\n    $197cd56b15c33885$var$messageStart.classList.remove('hidden');\n    $197cd56b15c33885$var$messageWin.classList.add('hidden');\n    $197cd56b15c33885$var$messageLose.classList.add('hidden');\n    $197cd56b15c33885$var$startButton.classList.add('start');\n    $197cd56b15c33885$var$startButton.classList.remove('restart');\n    $197cd56b15c33885$var$startButton.textContent = 'Start';\n    var initialState = $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$updateBoard(initialState);\n}\nfunction $197cd56b15c33885$var$startGame() {\n    if ($197cd56b15c33885$var$game.getStatus() === 'idle') {\n        var initialState = $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$startButton.textContent = 'Restart';\n        $197cd56b15c33885$var$startButton.classList.add('restart');\n        $197cd56b15c33885$var$startButton.classList.remove('start');\n        $197cd56b15c33885$var$updateBoard(initialState);\n        $197cd56b15c33885$var$messageStart.classList.add('hidden');\n        $197cd56b15c33885$var$messageWin.classList.add('hidden');\n        $197cd56b15c33885$var$messageLose.classList.add('hidden');\n        return;\n    }\n    if ($197cd56b15c33885$var$game.getStatus() === 'playing') $197cd56b15c33885$var$restartGame();\n}\n\n})();\n//# sourceMappingURL=index.2b4a0322.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\nconst gameScore = document.querySelector('.game-score');\nconst startButton = document.querySelector('.start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst messageStart = document.querySelector('.message-start');\n\nconst fields = document.querySelectorAll('.field-cell');\n\ndocument.addEventListener('keydown', keypressHandler);\nstartButton.addEventListener('click', startGame);\n\nfunction keypressHandler(e) {\n  if (e.key === 'Escape') {\n    restartGame();\n  }\n\n  if (e.key === 'Enter') {\n    startGame();\n  }\n\n  if (game.getStatus() === 'playing') {\n    if (e.key === 'ArrowUp') {\n      updateBoard(game.moveUp());\n    }\n\n    if (e.key === 'ArrowDown') {\n      updateBoard(game.moveDown());\n    }\n\n    if (e.key === 'ArrowLeft') {\n      updateBoard(game.moveLeft());\n    }\n\n    if (e.key === 'ArrowRight') {\n      updateBoard(game.moveRight());\n    }\n  } else if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n    startButton.textContent = 'Start';\n  } else if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n    startButton.classList.add('start');\n    startButton.classList.remove('restart');\n    startButton.textContent = 'Start';\n  }\n}\n\nfunction updateBoard(initialState) {\n  const gameValues = initialState.flat();\n\n  fields.forEach((field, index) => {\n    field.textContent = gameValues[index] || '';\n  });\n\n  const score = game.getScore();\n\n  gameScore.textContent = score;\n\n  const statuss = game.getStatus();\n\n  if (statuss === 'win') {\n    messageWin.classList.remove('hidden');\n  } else if (statuss === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction restartGame() {\n  messageStart.classList.remove('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  startButton.classList.add('start');\n  startButton.classList.remove('restart');\n  startButton.textContent = 'Start';\n\n  const initialState = game.restart();\n\n  updateBoard(initialState);\n}\n\nfunction startGame() {\n  if (game.getStatus() === 'idle') {\n    const initialState = game.start();\n\n    startButton.textContent = 'Restart';\n    startButton.classList.add('restart');\n    startButton.classList.remove('start');\n\n    updateBoard(initialState);\n\n    messageStart.classList.add('hidden');\n    messageWin.classList.add('hidden');\n    messageLose.classList.add('hidden');\n\n    return;\n  }\n\n  if (game.getStatus() === 'playing') {\n    restartGame();\n  }\n}\n","/* eslint-disable no-console */\n/* eslint-disable function-paren-newline */\n'use strict';\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    // eslint-disable-next-line no-console\n    this.state = 'idle';\n    this.score = 0;\n    this.initialState = initialState;\n  }\n\n  moveLeft() {\n    if (this.state !== 'idle') {\n      const moveAllNonZeroToTheLeft = this.initialState.map((row) =>\n        mergeToTheLeft(row),\n      );\n\n      this.state = loseWinState(moveAllNonZeroToTheLeft);\n\n      this.score += calculateScore(this.initialState, moveAllNonZeroToTheLeft);\n\n      const newCellAdded = addNewCellRandomCell(moveAllNonZeroToTheLeft, 1);\n\n      this.initialState = newCellAdded;\n\n      return this.initialState;\n    }\n  }\n  moveRight() {\n    if (this.state !== 'idle') {\n      const moveAllNonZeroToTheRight = this.initialState.map((row) =>\n        mergeToTheRight(row),\n      );\n\n      this.state = loseWinState(moveAllNonZeroToTheRight);\n\n      this.score += calculateScore(this.initialState, moveAllNonZeroToTheRight);\n\n      const newCellAdded = addNewCellRandomCell(moveAllNonZeroToTheRight, 1);\n\n      this.initialState = newCellAdded;\n\n      return this.initialState;\n    }\n  }\n  moveUp() {\n    if (this.state !== 'idle') {\n      const moveAllNonZeroToTheUp = mergeUp(this.initialState);\n\n      this.state = loseWinState(moveAllNonZeroToTheUp);\n\n      this.score += calculateScore(this.initialState, moveAllNonZeroToTheUp);\n\n      const newCellAdded = addNewCellRandomCell(moveAllNonZeroToTheUp, 1);\n\n      this.initialState = newCellAdded;\n\n      return this.initialState;\n    }\n  }\n  moveDown() {\n    if (this.state !== 'idle') {\n      const moveAllNonZeroToTheDown = mergeDown(this.initialState);\n\n      this.score += calculateScore(this.initialState, moveAllNonZeroToTheDown);\n      this.state = loseWinState(moveAllNonZeroToTheDown);\n\n      const newCellAdded = addNewCellRandomCell(moveAllNonZeroToTheDown, 1);\n\n      this.initialState = newCellAdded;\n\n      return this.initialState;\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.initialState;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.state;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    const allInitialDateIsZero = this.initialState\n      .flat()\n      .every((value) => value === 0);\n\n    const returnToInitialArray = allInitialDateIsZero\n      ? addNewCellRandomCell(this.initialState, 2)\n      : addNewCellRandomCell(this.initialState, 1);\n\n    this.initialState = returnToInitialArray;\n    this.score = 0;\n    this.state = 'playing';\n\n    return this.initialState;\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ];\n    this.score = 0;\n    this.state = 'idle';\n\n    return this.initialState;\n  }\n\n  // Add your own methods here\n}\n\nfunction addNewCellRandomCell(initialState, qntOfRandomCellsToAdd) {\n  const flatGameInARow = initialState.flat();\n  const availableIndices = flatGameInARow\n    .map((value, i) => (value === 0 ? i : null))\n    .filter((value) => value !== null);\n\n  if (availableIndices.length === 0) {\n    return initialState;\n  }\n\n  for (let i = 0; i < qntOfRandomCellsToAdd; i++) {\n    if (availableIndices.length === 0) {\n      break;\n    }\n\n    const randomIndex = Math.floor(Math.random() * availableIndices.length);\n    const indexToAdd = availableIndices.splice(randomIndex, 1)[0];\n    const randomValue = Math.random() < 0.9 ? 2 : 4;\n\n    flatGameInARow[indexToAdd] = randomValue;\n  }\n\n  const returnToInitialArray = [];\n\n  while (flatGameInARow.length) {\n    returnToInitialArray.push(flatGameInARow.splice(0, 4));\n  }\n\n  return returnToInitialArray;\n}\n\nfunction mergeToTheLeft(result) {\n  for (let i = 0; i < result.length - 1; i++) {\n    if (result[i] === result[i + 1] && result[i] !== 0) {\n      result[i] *= 2;\n      result[i + 1] = 0;\n    }\n  }\n\n  const filtered = result.filter((num) => num !== 0);\n\n  while (filtered.length < result.length) {\n    filtered.push(0);\n  }\n\n  return filtered;\n}\n\nfunction mergeToTheRight(result) {\n  let nonZeroValues = result.filter((value) => value !== 0);\n\n  for (let i = nonZeroValues.length - 1; i > 0; i--) {\n    if (nonZeroValues[i] === nonZeroValues[i - 1]) {\n      nonZeroValues[i] *= 2;\n      nonZeroValues[i - 1] = 0;\n    }\n  }\n  // Remove zeros again after merging\n  nonZeroValues = nonZeroValues.filter((value) => value !== 0);\n\n  // Add zeros to the left to maintain the row length\n  while (nonZeroValues.length < result.length) {\n    nonZeroValues.unshift(0);\n  }\n\n  return nonZeroValues;\n}\n\nfunction mergeDown(initialState) {\n  const result = initialState.map((col) => [...col]);\n\n  for (let col = 0; col < result[0].length; col++) {\n    const column = result.map((row) => row[col]);\n\n    for (let i = column.length - 1; i > 0; i--) {\n      if (column[i] === column[i - 1] && column[i] !== 0) {\n        column[i] *= 2;\n        column[i - 1] = 0;\n      }\n    }\n\n    const filtered = column.filter((num) => num !== 0);\n\n    while (filtered.length < column.length) {\n      filtered.unshift(0);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      result[i][col] = filtered[i];\n    }\n  }\n\n  return result;\n}\n\nfunction mergeUp(initialState) {\n  const result = initialState.map((col) => [...col]);\n\n  for (let col = 0; col < result[0].length; col++) {\n    const column = result.map((row) => row[col]);\n\n    for (let i = 0; i < column.length - 1; i++) {\n      if (column[i] === column[i + 1] && column[i] !== 0) {\n        column[i] *= 2;\n        column[i + 1] = 0;\n      }\n    }\n\n    const filtered = column.filter((num) => num !== 0);\n\n    while (filtered.length < column.length) {\n      filtered.push(0);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      result[i][col] = filtered[i];\n    }\n  }\n\n  return result;\n}\n\nfunction checkIfWin(initialState) {\n  for (let i = 0; i < initialState.length; i++) {\n    for (let j = 0; j < initialState[i].length; j++) {\n      if (initialState[i][j] === 2048) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkIfLose(initialState) {\n  for (let i = 0; i < initialState.length; i++) {\n    for (let j = 0; j < initialState[i].length; j++) {\n      if (initialState[i][j] === 0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nfunction loseWinState(initialState) {\n  const lose = checkIfLose(initialState);\n  const win = checkIfWin(initialState);\n\n  if (lose) {\n    return 'lose';\n  }\n\n  if (win) {\n    return 'win';\n  }\n\n  return 'playing';\n}\n\nfunction calculateScore(initialState, finalState) {\n  let score = 0;\n\n  for (let i = 0; i < initialState.length; i++) {\n    for (let j = 0; j < initialState[i].length; j++) {\n      if (finalState[i][j] > initialState[i][j]) {\n        score += finalState[i][j];\n      }\n    }\n  }\n\n  return score;\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","from","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","TypeError","$3d28d7f1aac198f5$var$addNewCellRandomCell","initialState","qntOfRandomCellsToAdd","flatGameInARow","flat","availableIndices","map","value","filter","randomIndex","Math","floor","random","indexToAdd","splice","randomValue","returnToInitialArray","push","$3d28d7f1aac198f5$var$loseWinState","lose","$3d28d7f1aac198f5$var$checkIfLose","j","win","$3d28d7f1aac198f5$var$checkIfWin","$3d28d7f1aac198f5$var$calculateScore","finalState","score","$197cd56b15c33885$var$game","protoProps","Game","arguments","instance","Constructor","state","key","moveAllNonZeroToTheLeft","row","$3d28d7f1aac198f5$var$mergeToTheLeft","result","filtered","num","newCellAdded","moveAllNonZeroToTheRight","$3d28d7f1aac198f5$var$mergeToTheRight","nonZeroValues","unshift","moveAllNonZeroToTheUp","$3d28d7f1aac198f5$var$mergeUp","_loop","col","column","i1","moveAllNonZeroToTheDown","$3d28d7f1aac198f5$var$mergeDown","allInitialDateIsZero","every","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$gameScore","document","querySelector","$197cd56b15c33885$var$startButton","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$fields","querySelectorAll","$197cd56b15c33885$var$updateBoard","gameValues","forEach","field","index","textContent","getScore","statuss","getStatus","classList","remove","$197cd56b15c33885$var$restartGame","add","restart","$197cd56b15c33885$var$startGame","start","addEventListener","e","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.2b4a0322.js.map"}